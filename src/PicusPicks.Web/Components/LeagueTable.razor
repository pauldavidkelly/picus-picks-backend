@using PicusPicks.Web.Services
@using PicusPicks.Web.Models
@inject ILeagueTableService LeagueTableService
@inject ILogger<LeagueTable> Logger

<div class="league-table-container">
    <div class="header">
        <div class="title">
            <i class="bi bi-trophy-fill"></i>
            <h2>League Standings</h2>
        </div>
        <p class="subtitle">Who's making the best picks?</p>
    </div>

    @if (_loadError)
    {
        <div class="alert alert-danger" role="alert">
            Error loading league table stats. Please try again later.
        </div>
    }
    else if (_stats == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!_stats.Any())
    {
        <div class="alert alert-info" role="alert">
            No stats available yet. Make some picks to see how you rank!
        </div>
    }
    else
    {
        <div class="league-table">
            @{
                var rank = 1;
                foreach (var stat in _stats)
                {
                    var successClass = stat.SuccessRate switch
                    {
                        >= 70 => "success-rate-high",
                        >= 50 => "success-rate-medium",
                        _ => "success-rate-low"
                    };

                    <div class="league-card @successClass">
                        <div class="rank">@(rank++)</div>
                        <div class="user-info">
                            <div class="display-name">@stat.DisplayName</div>
                            <div class="stats">
                                <div class="picks">
                                    <span class="correct">@stat.CorrectPicks</span>
                                    <span class="separator">/</span>
                                    <span class="total">@stat.TotalPicks</span>
                                </div>
                                <div class="success-rate">@($"{stat.SuccessRate:F1}%")</div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    }
</div>

<style>
    .league-table-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }

    .header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .header .title {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
        margin-bottom: 0.5rem;
    }

    .header .title i {
        font-size: 2rem;
        color: #ffd700;
        filter: drop-shadow(0 0 4px rgba(255, 215, 0, 0.5));
    }

    .header .title h2 {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0;
        background: linear-gradient(45deg, #ffd700, #ffa500);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
    }

    .header .subtitle {
        color: #cccccc;
        font-size: 1.1rem;
        margin: 0;
    }

    .league-table {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .league-card {
        display: flex;
        align-items: center;
        padding: 1rem;
        background: #1a1a1a;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .league-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    .rank {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #333;
        color: white;
        border-radius: 50%;
        font-weight: bold;
        font-size: 1.2rem;
        margin-right: 1rem;
    }

    .user-info {
        flex: 1;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .display-name {
        font-size: 1.2rem;
        font-weight: 500;
        color: white;
    }

    .stats {
        display: flex;
        align-items: center;
        gap: 1.5rem;
    }

    .picks {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        color: #cccccc;
    }

    .correct {
        color: #4caf50;
        font-weight: bold;
    }

    .total {
        color: #cccccc;
    }

    .separator {
        color: #666;
    }

    .success-rate {
        font-size: 1.2rem;
        font-weight: bold;
        min-width: 70px;
        text-align: right;
    }

    .success-rate-high {
        border-left: 4px solid #4caf50;
    }

    .success-rate-high .success-rate {
        color: #4caf50;
    }

    .success-rate-medium {
        border-left: 4px solid #ff9800;
    }

    .success-rate-medium .success-rate {
        color: #ff9800;
    }

    .success-rate-low {
        border-left: 4px solid #f44336;
    }

    .success-rate-low .success-rate {
        color: #f44336;
    }
</style>

@code {
    private IEnumerable<LeagueTableStats>? _stats;
    private bool _loadError;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _stats = await LeagueTableService.GetLeagueTableStatsAsync();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading league table stats");
            _loadError = true;
        }
    }
}
